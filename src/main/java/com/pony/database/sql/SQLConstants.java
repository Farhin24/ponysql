/* Generated By:JavaCC: Do not edit this line. SQLConstants.java */
package com.pony.database.sql;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int STAR = 7;
  /** RegularExpression Id. */
  int ASSIGNMENT = 8;
  /** RegularExpression Id. */
  int EQUALS = 9;
  /** RegularExpression Id. */
  int GR = 10;
  /** RegularExpression Id. */
  int LE = 11;
  /** RegularExpression Id. */
  int GREQ = 12;
  /** RegularExpression Id. */
  int LEEQ = 13;
  /** RegularExpression Id. */
  int NOTEQ = 14;
  /** RegularExpression Id. */
  int DIVIDE = 15;
  /** RegularExpression Id. */
  int ADD = 16;
  /** RegularExpression Id. */
  int SUBTRACT = 17;
  /** RegularExpression Id. */
  int CONCAT = 18;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 19;
  /** RegularExpression Id. */
  int NULL_LITERAL = 20;
  /** RegularExpression Id. */
  int REGEX_LITERAL = 21;
  /** RegularExpression Id. */
  int DROP = 22;
  /** RegularExpression Id. */
  int SHOW = 23;
  /** RegularExpression Id. */
  int ALTER = 24;
  /** RegularExpression Id. */
  int SELECT = 25;
  /** RegularExpression Id. */
  int UPDATE = 26;
  /** RegularExpression Id. */
  int CREATE = 27;
  /** RegularExpression Id. */
  int DELETE = 28;
  /** RegularExpression Id. */
  int INSERT = 29;
  /** RegularExpression Id. */
  int COMMIT = 30;
  /** RegularExpression Id. */
  int COMPACT = 31;
  /** RegularExpression Id. */
  int EXPLAIN = 32;
  /** RegularExpression Id. */
  int ROLLBACK = 33;
  /** RegularExpression Id. */
  int OPTIMIZE = 34;
  /** RegularExpression Id. */
  int DESCRIBE = 35;
  /** RegularExpression Id. */
  int SHUTDOWN = 36;
  /** RegularExpression Id. */
  int IS = 37;
  /** RegularExpression Id. */
  int AS = 38;
  /** RegularExpression Id. */
  int ON = 39;
  /** RegularExpression Id. */
  int IF = 40;
  /** RegularExpression Id. */
  int TO = 41;
  /** RegularExpression Id. */
  int NO = 42;
  /** RegularExpression Id. */
  int ALL = 43;
  /** RegularExpression Id. */
  int ANY = 44;
  /** RegularExpression Id. */
  int SET = 45;
  /** RegularExpression Id. */
  int USE = 46;
  /** RegularExpression Id. */
  int ASC = 47;
  /** RegularExpression Id. */
  int OLD = 48;
  /** RegularExpression Id. */
  int NEW = 49;
  /** RegularExpression Id. */
  int SQLADD = 50;
  /** RegularExpression Id. */
  int FOR = 51;
  /** RegularExpression Id. */
  int ROW = 52;
  /** RegularExpression Id. */
  int EACH = 53;
  /** RegularExpression Id. */
  int CALL = 54;
  /** RegularExpression Id. */
  int BOTH = 55;
  /** RegularExpression Id. */
  int SOME = 56;
  /** RegularExpression Id. */
  int FROM = 57;
  /** RegularExpression Id. */
  int LEFT = 58;
  /** RegularExpression Id. */
  int DESC = 59;
  /** RegularExpression Id. */
  int INTO = 60;
  /** RegularExpression Id. */
  int JOIN = 61;
  /** RegularExpression Id. */
  int TRIM = 62;
  /** RegularExpression Id. */
  int VIEW = 63;
  /** RegularExpression Id. */
  int LOCK = 64;
  /** RegularExpression Id. */
  int WITH = 65;
  /** RegularExpression Id. */
  int USER = 66;
  /** RegularExpression Id. */
  int CAST = 67;
  /** RegularExpression Id. */
  int LONG = 68;
  /** RegularExpression Id. */
  int NAME = 69;
  /** RegularExpression Id. */
  int JAVA = 70;
  /** RegularExpression Id. */
  int AFTER = 71;
  /** RegularExpression Id. */
  int START = 72;
  /** RegularExpression Id. */
  int COUNT = 73;
  /** RegularExpression Id. */
  int WHERE = 74;
  /** RegularExpression Id. */
  int CYCLE = 75;
  /** RegularExpression Id. */
  int CACHE = 76;
  /** RegularExpression Id. */
  int RIGHT = 77;
  /** RegularExpression Id. */
  int TABLE = 78;
  /** RegularExpression Id. */
  int LIMIT = 79;
  /** RegularExpression Id. */
  int INNER = 80;
  /** RegularExpression Id. */
  int INDEX = 81;
  /** RegularExpression Id. */
  int CROSS = 82;
  /** RegularExpression Id. */
  int OUTER = 83;
  /** RegularExpression Id. */
  int CHECK = 84;
  /** RegularExpression Id. */
  int USING = 85;
  /** RegularExpression Id. */
  int UNION = 86;
  /** RegularExpression Id. */
  int GRANT = 87;
  /** RegularExpression Id. */
  int USAGE = 88;
  /** RegularExpression Id. */
  int SQLRETURN = 89;
  /** RegularExpression Id. */
  int BEFORE = 90;
  /** RegularExpression Id. */
  int UNLOCK = 91;
  /** RegularExpression Id. */
  int ACTION = 92;
  /** RegularExpression Id. */
  int GROUPS = 93;
  /** RegularExpression Id. */
  int REVOKE = 94;
  /** RegularExpression Id. */
  int OPTION = 95;
  /** RegularExpression Id. */
  int PUBLIC = 96;
  /** RegularExpression Id. */
  int EXCEPT = 97;
  /** RegularExpression Id. */
  int IGNORE = 98;
  /** RegularExpression Id. */
  int SCHEMA = 99;
  /** RegularExpression Id. */
  int EXISTS = 100;
  /** RegularExpression Id. */
  int VALUES = 101;
  /** RegularExpression Id. */
  int HAVING = 102;
  /** RegularExpression Id. */
  int UNIQUE = 103;
  /** RegularExpression Id. */
  int SQLCOLUMN = 104;
  /** RegularExpression Id. */
  int RETURNS = 105;
  /** RegularExpression Id. */
  int ACCOUNT = 106;
  /** RegularExpression Id. */
  int LEADING = 107;
  /** RegularExpression Id. */
  int NATURAL = 108;
  /** RegularExpression Id. */
  int BETWEEN = 109;
  /** RegularExpression Id. */
  int TRIGGER = 110;
  /** RegularExpression Id. */
  int SQLDEFAULT = 111;
  /** RegularExpression Id. */
  int VARYING = 112;
  /** RegularExpression Id. */
  int EXECUTE = 113;
  /** RegularExpression Id. */
  int CALLBACK = 114;
  /** RegularExpression Id. */
  int MINVALUE = 115;
  /** RegularExpression Id. */
  int MAXVALUE = 116;
  /** RegularExpression Id. */
  int FUNCTION = 117;
  /** RegularExpression Id. */
  int SEQUENCE = 118;
  /** RegularExpression Id. */
  int RESTRICT = 119;
  /** RegularExpression Id. */
  int PASSWORD = 120;
  /** RegularExpression Id. */
  int TRAILING = 121;
  /** RegularExpression Id. */
  int GROUPBY = 122;
  /** RegularExpression Id. */
  int ORDERBY = 123;
  /** RegularExpression Id. */
  int DEFERRED = 124;
  /** RegularExpression Id. */
  int DISTINCT = 125;
  /** RegularExpression Id. */
  int LANGUAGE = 126;
  /** RegularExpression Id. */
  int INCREMENT = 127;
  /** RegularExpression Id. */
  int PROCEDURE = 128;
  /** RegularExpression Id. */
  int CHARACTER = 129;
  /** RegularExpression Id. */
  int IMMEDIATE = 130;
  /** RegularExpression Id. */
  int INITIALLY = 131;
  /** RegularExpression Id. */
  int TEMPORARY = 132;
  /** RegularExpression Id. */
  int INTERSECT = 133;
  /** RegularExpression Id. */
  int PRIVILEGES = 134;
  /** RegularExpression Id. */
  int CONSTRAINT = 135;
  /** RegularExpression Id. */
  int DEFERRABLE = 136;
  /** RegularExpression Id. */
  int REFERENCES = 137;
  /** RegularExpression Id. */
  int PRIMARY = 138;
  /** RegularExpression Id. */
  int FOREIGN = 139;
  /** RegularExpression Id. */
  int KEY = 140;
  /** RegularExpression Id. */
  int INDEX_NONE = 141;
  /** RegularExpression Id. */
  int INDEX_BLIST = 142;
  /** RegularExpression Id. */
  int GROUPMAX = 143;
  /** RegularExpression Id. */
  int COLLATE = 144;
  /** RegularExpression Id. */
  int PRIMARY_STRENGTH = 145;
  /** RegularExpression Id. */
  int SECONDARY_STRENGTH = 146;
  /** RegularExpression Id. */
  int TERTIARY_STRENGTH = 147;
  /** RegularExpression Id. */
  int IDENTICAL_STRENGTH = 148;
  /** RegularExpression Id. */
  int NO_DECOMPOSITION = 149;
  /** RegularExpression Id. */
  int CANONICAL_DECOMPOSITION = 150;
  /** RegularExpression Id. */
  int FULL_DECOMPOSITION = 151;
  /** RegularExpression Id. */
  int BIT = 152;
  /** RegularExpression Id. */
  int INT = 153;
  /** RegularExpression Id. */
  int REAL = 154;
  /** RegularExpression Id. */
  int CLOB = 155;
  /** RegularExpression Id. */
  int BLOB = 156;
  /** RegularExpression Id. */
  int CHAR = 157;
  /** RegularExpression Id. */
  int TEXT = 158;
  /** RegularExpression Id. */
  int DATE = 159;
  /** RegularExpression Id. */
  int TIME = 160;
  /** RegularExpression Id. */
  int FLOAT = 161;
  /** RegularExpression Id. */
  int BIGINT = 162;
  /** RegularExpression Id. */
  int DOUBLE = 163;
  /** RegularExpression Id. */
  int STRING = 164;
  /** RegularExpression Id. */
  int BINARY = 165;
  /** RegularExpression Id. */
  int NUMERIC = 166;
  /** RegularExpression Id. */
  int DECIMAL = 167;
  /** RegularExpression Id. */
  int BOOLEAN = 168;
  /** RegularExpression Id. */
  int TINYINT = 169;
  /** RegularExpression Id. */
  int INTEGER = 170;
  /** RegularExpression Id. */
  int VARCHAR = 171;
  /** RegularExpression Id. */
  int SMALLINT = 172;
  /** RegularExpression Id. */
  int VARBINARY = 173;
  /** RegularExpression Id. */
  int TIMESTAMP = 174;
  /** RegularExpression Id. */
  int JAVA_OBJECT = 175;
  /** RegularExpression Id. */
  int LONGVARCHAR = 176;
  /** RegularExpression Id. */
  int LONGVARBINARY = 177;
  /** RegularExpression Id. */
  int TRANSACTIONISOLATIONLEVEL = 178;
  /** RegularExpression Id. */
  int AUTOCOMMIT = 179;
  /** RegularExpression Id. */
  int READCOMMITTED = 180;
  /** RegularExpression Id. */
  int READUNCOMMITTED = 181;
  /** RegularExpression Id. */
  int REPEATABLEREAD = 182;
  /** RegularExpression Id. */
  int SERIALIZABLE = 183;
  /** RegularExpression Id. */
  int CASCADE = 184;
  /** RegularExpression Id. */
  int CURRENT_TIME = 185;
  /** RegularExpression Id. */
  int CURRENT_DATE = 186;
  /** RegularExpression Id. */
  int CURRENT_TIMESTAMP = 187;
  /** RegularExpression Id. */
  int LIKE = 188;
  /** RegularExpression Id. */
  int REGEX = 189;
  /** RegularExpression Id. */
  int AND = 190;
  /** RegularExpression Id. */
  int OR = 191;
  /** RegularExpression Id. */
  int IN = 192;
  /** RegularExpression Id. */
  int NOT = 193;
  /** RegularExpression Id. */
  int NUMBER_LITERAL = 194;
  /** RegularExpression Id. */
  int STRING_LITERAL = 195;
  /** RegularExpression Id. */
  int QUOTED_VARIABLE = 196;
  /** RegularExpression Id. */
  int IDENTIFIER = 197;
  /** RegularExpression Id. */
  int DOT_DELIMINATED_REF = 198;
  /** RegularExpression Id. */
  int QUOTED_DELIMINATED_REF = 199;
  /** RegularExpression Id. */
  int JAVA_OBJECT_ARRAY_REF = 200;
  /** RegularExpression Id. */
  int CTALIAS = 201;
  /** RegularExpression Id. */
  int GLOBVARIABLE = 202;
  /** RegularExpression Id. */
  int QUOTEDGLOBVARIABLE = 203;
  /** RegularExpression Id. */
  int PARAMETER_REF = 204;
  /** RegularExpression Id. */
  int LETTER = 205;
  /** RegularExpression Id. */
  int DIGIT = 206;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"*\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "<NOTEQ>",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\"||\"",
    "<BOOLEAN_LITERAL>",
    "\"null\"",
    "<REGEX_LITERAL>",
    "\"drop\"",
    "\"show\"",
    "\"alter\"",
    "\"select\"",
    "\"update\"",
    "\"create\"",
    "\"delete\"",
    "\"insert\"",
    "\"commit\"",
    "\"compact\"",
    "\"explain\"",
    "\"rollback\"",
    "\"optimize\"",
    "\"describe\"",
    "\"shutdown\"",
    "\"is\"",
    "\"as\"",
    "\"on\"",
    "\"if\"",
    "\"to\"",
    "\"no\"",
    "\"all\"",
    "\"any\"",
    "\"set\"",
    "\"use\"",
    "\"asc\"",
    "\"old\"",
    "\"new\"",
    "\"add\"",
    "\"for\"",
    "\"row\"",
    "\"each\"",
    "\"call\"",
    "\"both\"",
    "\"some\"",
    "\"from\"",
    "\"left\"",
    "\"desc\"",
    "\"into\"",
    "\"join\"",
    "\"trim\"",
    "\"view\"",
    "\"lock\"",
    "\"with\"",
    "\"user\"",
    "\"cast\"",
    "\"long\"",
    "\"name\"",
    "\"java\"",
    "\"after\"",
    "\"start\"",
    "\"count\"",
    "\"where\"",
    "\"cycle\"",
    "\"cache\"",
    "\"right\"",
    "\"table\"",
    "\"limit\"",
    "\"inner\"",
    "\"index\"",
    "\"cross\"",
    "\"outer\"",
    "\"check\"",
    "\"using\"",
    "\"union\"",
    "\"grant\"",
    "\"usage\"",
    "\"return\"",
    "\"before\"",
    "\"unlock\"",
    "\"action\"",
    "\"groups\"",
    "\"revoke\"",
    "\"option\"",
    "\"public\"",
    "\"except\"",
    "\"ignore\"",
    "\"schema\"",
    "\"exists\"",
    "\"values\"",
    "\"having\"",
    "\"unique\"",
    "\"column\"",
    "\"returns\"",
    "\"account\"",
    "\"leading\"",
    "\"natural\"",
    "\"between\"",
    "\"trigger\"",
    "\"default\"",
    "\"varying\"",
    "\"execute\"",
    "\"callback\"",
    "\"minvalue\"",
    "\"maxvalue\"",
    "\"function\"",
    "\"sequence\"",
    "\"restrict\"",
    "\"password\"",
    "\"trailing\"",
    "\"group by\"",
    "\"order by\"",
    "\"deferred\"",
    "\"distinct\"",
    "\"language\"",
    "\"increment\"",
    "\"procedure\"",
    "\"character\"",
    "\"immediate\"",
    "\"initially\"",
    "\"temporary\"",
    "\"intersect\"",
    "\"privileges\"",
    "\"constraint\"",
    "\"deferrable\"",
    "\"references\"",
    "\"primary\"",
    "\"foreign\"",
    "\"key\"",
    "\"index_none\"",
    "\"index_blist\"",
    "\"group max\"",
    "\"collate\"",
    "\"primary_strength\"",
    "\"secondary_strength\"",
    "\"tertiary_strength\"",
    "\"identical_strength\"",
    "\"no_decomposition\"",
    "\"canonical_decomposition\"",
    "\"full_decomposition\"",
    "\"bit\"",
    "\"int\"",
    "\"real\"",
    "\"clob\"",
    "\"blob\"",
    "\"char\"",
    "\"text\"",
    "\"date\"",
    "\"time\"",
    "\"float\"",
    "\"bigint\"",
    "\"double\"",
    "\"string\"",
    "\"binary\"",
    "\"numeric\"",
    "\"decimal\"",
    "\"boolean\"",
    "\"tinyint\"",
    "\"integer\"",
    "\"varchar\"",
    "\"smallint\"",
    "\"varbinary\"",
    "\"timestamp\"",
    "\"java_object\"",
    "\"longvarchar\"",
    "\"longvarbinary\"",
    "\"transaction isolation level\"",
    "\"auto commit\"",
    "\"read committed\"",
    "\"read uncommitted\"",
    "\"repeatable read\"",
    "\"serializable\"",
    "\"cascade\"",
    "\"current_time\"",
    "\"current_date\"",
    "\"current_timestamp\"",
    "\"like\"",
    "\"regex\"",
    "\"and\"",
    "\"or\"",
    "\"in\"",
    "\"not\"",
    "<NUMBER_LITERAL>",
    "<STRING_LITERAL>",
    "<QUOTED_VARIABLE>",
    "<IDENTIFIER>",
    "<DOT_DELIMINATED_REF>",
    "<QUOTED_DELIMINATED_REF>",
    "<JAVA_OBJECT_ARRAY_REF>",
    "<CTALIAS>",
    "<GLOBVARIABLE>",
    "<QUOTEDGLOBVARIABLE>",
    "\"?\"",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
  };

}
